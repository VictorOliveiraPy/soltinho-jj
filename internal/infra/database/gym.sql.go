// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: gym.sql

package db

import (
	"context"
)

const createGym = `-- name: CreateGym :exec
INSERT INTO gyms (id, user_id, gym_name, team_name, active)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, user_id, gym_name, team_name, active
`

type CreateGymParams struct {
	ID       string
	UserID   string
	GymName  string
	TeamName string
	Active   bool
}

func (q *Queries) CreateGym(ctx context.Context, arg CreateGymParams) error {
	_, err := q.db.ExecContext(ctx, createGym,
		arg.ID,
		arg.UserID,
		arg.GymName,
		arg.TeamName,
		arg.Active,
	)
	return err
}

const getGymByID = `-- name: GetGymByID :one
SELECT id, user_id, gym_name, team_name, active
FROM gyms
WHERE id = $1
LIMIT 1
`

func (q *Queries) GetGymByID(ctx context.Context, id string) (Gym, error) {
	row := q.db.QueryRowContext(ctx, getGymByID, id)
	var i Gym
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.GymName,
		&i.TeamName,
		&i.Active,
	)
	return i, err
}
